vec = c(1,2,3,NA)
vec
vec = vec[!is.na(vec)]
vec
pascal_triangle <- function(p)
{
for (p in 0:10)
{
cat(choose(p, k = 0:p))
cat("\n")
}
}
pascal_triangle(2)
install.packages('ggmap()')
library(ggmap
;
library(ggmap)
install.packages(ggmap())
install.packages(ggmap
install.packages(ggmap)
install.packages(ggmap)
install.packages('ggmap()')
install.packages('ggmap()')
library(ggmap)
install.packages('ggmap()')
install.packages("ggmap")
library(ggmap)
library(ggplot2)
library(ggthemes)
install.packages("ggthemes")
install.packages("ggplot2")
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "454fe6e2-bae4-66c4-fa0d-a91016c51069")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
require(devtools)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"bc"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"pm10"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"19/02/2016"
end_date<-"19/02/2018"
sensor_box<-4317218322204134
sensor_type<-"pm2.5"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"2016-02-20 18:10"
end_date<-"2018-02-20 18:10"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"2016-02-20 18:10"
end_date<-"2018-02-20 18:10"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
start_date<-"2017-02-20 18:10"
end_date<-"2018-02-20 18:10"
sensor_box<-4317218322204134
sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
# install.packages('ggmap()')
library(ggmap)
library(ggplot2)
library(ggthemes)
setwd("C:/polluscope")
args <- commandArgs(TRUE)
start_date<-paste(args[1],args[2],sep=" ")
end_date<-paste(args[3],args[4],sep=" ")
sensor_box<-args[5]
sensor_type<-args[6]
#start_date<-"2017-02-20 18:10"
#end_date<-"2018-02-20 18:10"
#sensor_box<-4317218322204134
#sensor_type<-"pm1.0"
.libPaths('C:/Users/Leqsi/Documents/R/win-library/3.5')#to indicate the path to the libraries when run the script through php
require('RPostgreSQL')
require('ggplot2')
require('ggmap')
con=dbConnect(PostgreSQL(),
user="postgres",dbname="polluscope",password="12345678")
sqlStatement <- paste0("select * from flaten_all_data where node_id='", sensor_box ,"' and timestamp between '", start_date ,"' and '", end_date ,"'  ")
out=dbGetQuery(con, sqlStatement)
write.csv(out, file = "MyData.csv",row.names = FALSE)
png(filename="plot.png",width=500,height=500)# open or creat the png file
if(sensor_type=="pm1.0")
p<- ggplot(out, aes(out$timestamp, out$pm1.0, color=pm1.0))
if(sensor_type=="pm10")
p<- ggplot(out, aes(out$timestamp, out$pm10, color=pm10))
if(sensor_type=="pm2.5")
p<- ggplot(out, aes(out$timestamp, out$pm2.5, color=pm2.5))
if(sensor_type=="no2")
p<- ggplot(out, aes(out$timestamp, out$no2, color=no2))
if(sensor_type=="bc")
p<- ggplot(out, aes(out$timestamp, out$bc, color=bc))
p + geom_point()+ labs(x = "timestamp ", y=sensor_type ,title = "AirParif")
dev.off()
register_google(key = "AIzaSyBd4BvkehJr6z4Umr9yh83WY4C2FC0XwXk")
png(filename="map.png",width=500,height=500)# operning or creating the png file
lx_map <- get_map(location = c(2.3272305000000415 ,48.8635517), maptype = "roadmap", zoom = 15)
ggmap(lx_map, extent = "device")+ geom_point(data=out, aes(x=out$gps_lng, y=out$gps_lat),size=4, color='red')
dev.off()
dbDisconnect(con)
install.packages("ggthemes", lib="C:/Program Files/R/R-3.5.2/library")
install.packages("ggthemes", lib="C:/Users/Leqsi/Documents/R/win-library/3.5")
